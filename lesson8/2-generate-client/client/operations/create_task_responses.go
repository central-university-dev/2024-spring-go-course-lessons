// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateTaskReader is a Reader for the CreateTask structure.
type CreateTaskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateTaskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 400:
		result := NewCreateTaskBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateTaskUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /task] createTask", response, response.Code())
	}
}

// NewCreateTaskBadRequest creates a CreateTaskBadRequest with default headers values
func NewCreateTaskBadRequest() *CreateTaskBadRequest {
	return &CreateTaskBadRequest{}
}

/*
CreateTaskBadRequest describes a response with status code 400, with default header values.

Некорректный ввод
*/
type CreateTaskBadRequest struct {
}

// IsSuccess returns true when this create task bad request response has a 2xx status code
func (o *CreateTaskBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create task bad request response has a 3xx status code
func (o *CreateTaskBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create task bad request response has a 4xx status code
func (o *CreateTaskBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create task bad request response has a 5xx status code
func (o *CreateTaskBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create task bad request response a status code equal to that given
func (o *CreateTaskBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create task bad request response
func (o *CreateTaskBadRequest) Code() int {
	return 400
}

func (o *CreateTaskBadRequest) Error() string {
	return fmt.Sprintf("[POST /task][%d] createTaskBadRequest ", 400)
}

func (o *CreateTaskBadRequest) String() string {
	return fmt.Sprintf("[POST /task][%d] createTaskBadRequest ", 400)
}

func (o *CreateTaskBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateTaskUnprocessableEntity creates a CreateTaskUnprocessableEntity with default headers values
func NewCreateTaskUnprocessableEntity() *CreateTaskUnprocessableEntity {
	return &CreateTaskUnprocessableEntity{}
}

/*
CreateTaskUnprocessableEntity describes a response with status code 422, with default header values.

Недопустимые значения
*/
type CreateTaskUnprocessableEntity struct {
}

// IsSuccess returns true when this create task unprocessable entity response has a 2xx status code
func (o *CreateTaskUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create task unprocessable entity response has a 3xx status code
func (o *CreateTaskUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create task unprocessable entity response has a 4xx status code
func (o *CreateTaskUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create task unprocessable entity response has a 5xx status code
func (o *CreateTaskUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create task unprocessable entity response a status code equal to that given
func (o *CreateTaskUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create task unprocessable entity response
func (o *CreateTaskUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateTaskUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /task][%d] createTaskUnprocessableEntity ", 422)
}

func (o *CreateTaskUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /task][%d] createTaskUnprocessableEntity ", 422)
}

func (o *CreateTaskUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
